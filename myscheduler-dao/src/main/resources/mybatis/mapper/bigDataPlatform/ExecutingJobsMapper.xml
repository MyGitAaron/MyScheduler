<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.my.myscheduler.dao.mapper.bigDataPlatform.ExecutingJobsMapper">
    <resultMap id="BaseResultMap" type="org.my.myscheduler.dao.entity.ExecutingJobsEntity">
        <id column="executingJobsId" property="executingJobsId" jdbcType="INTEGER" />
        <result column="jobName" property="jobName" jdbcType="VARCHAR" />
        <result column="executingType" property="executingType" jdbcType="INTEGER" />
        <result column="jobHisId" property="jobHisId" jdbcType="INTEGER" />
        <result column="executingPeriod" property="executingPeriod" jdbcType="VARCHAR" />
        <result column="jobScript" property="jobScript" jdbcType="VARCHAR" />
        <result column="jobScriptDate" property="jobScriptDate" jdbcType="TIMESTAMP" />
        <result column="priority" property="priority" jdbcType="INTEGER" />
        <result column="jobStatus" property="jobStatus" jdbcType="INTEGER" />
        <result column="retries" property="retries" jdbcType="INTEGER" />
        <result column="retriesInterval" property="retriesInterval" jdbcType="INTEGER" />
        <result column="attempt" property="attempt" jdbcType="INTEGER" />
        <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP" />
        <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
        <result column="executorName" property="executorName" jdbcType="VARCHAR" />
        <result column="executeTimes" property="executeTimes" jdbcType="INTEGER" />
        <result column="isDeleted" property="isDeleted" jdbcType="CHAR" />
        <result column="inputDate" property="inputDate" jdbcType="TIMESTAMP" />
        <result column="inputBy" property="inputBy" jdbcType="VARCHAR" />
        <result column="stampDate" property="stampDate" jdbcType="TIMESTAMP" />
        <result column="modifiedBy" property="modifiedBy" jdbcType="VARCHAR" />
        <result column="processId" property="processId" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List">
        executingJobsId,jobName,jobHisId,executingType,executingPeriod,jobScript,jobScriptDate,priority,jobStatus,retries,retriesInterval,attempt,submitTime,startTime,endTime,executorName,executeTimes,isDeleted,inputDate,inputBy,stampDate,modifiedBy,processId
    </sql>
    <select id="selectExecutingJobsById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from ExecutingJobs 
        where executingJobsId = #{executingJobsId,jdbcType=INTEGER} and isDeleted = '0'
    </select>
    <select id="selectExecutingJobsCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(1)
        from ExecutingJobs 
        where isDeleted='0'
        <if test="executingJobsId != null ">
        and executingJobsId=#{executingJobsId,jdbcType=INTEGER}
        </if>
        <if test="jobName != null  and jobName != ''">
        and jobName=#{jobName,jdbcType=VARCHAR}
        </if>
        <if test="executingType != null ">
        and executingType=#{executingType,jdbcType=INTEGER}
        </if>
        <if test="executingPeriod != null  and executingPeriod != ''">
        and executingPeriod=#{executingPeriod,jdbcType=VARCHAR}
        </if>
        <if test="jobScript != null  and jobScript != ''">
        and jobScript=#{jobScript,jdbcType=VARCHAR}
        </if>
        <if test="jobScriptDate != null ">
        and jobScriptDate=#{jobScriptDate,jdbcType=TIMESTAMP}
        </if>
        <if test="priority != null ">
        and priority=#{priority,jdbcType=INTEGER}
        </if>
        <if test="jobStatus != null ">
        and jobStatus=#{jobStatus,jdbcType=INTEGER}
        </if>
        <if test="retries != null ">
        and retries=#{retries,jdbcType=INTEGER}
        </if>
        <if test="retriesInterval != null ">
        and retriesInterval=#{retriesInterval,jdbcType=INTEGER}
        </if>
        <if test="attempt != null ">
            and attempt=#{attempt,jdbcType=INTEGER}
        </if>
        <if test="submitTime != null ">
        and submitTime=#{submitTime,jdbcType=TIMESTAMP}
        </if>
        <if test="startTime != null ">
        and startTime=#{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null ">
        and endTime=#{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="executorName != null  and executorName != ''">
        and executorName=#{executorName,jdbcType=VARCHAR}
        </if>
        <if test="executeTimes != null ">
        and executeTimes=#{executeTimes,jdbcType=INTEGER}
        </if>
        <if test="inputDate != null ">
        and inputDate=#{inputDate,jdbcType=TIMESTAMP}
        </if>
        <if test="inputBy != null  and inputBy != ''">
        and inputBy=#{inputBy,jdbcType=VARCHAR}
        </if>
        <if test="stampDate != null ">
        and stampDate=#{stampDate,jdbcType=TIMESTAMP}
        </if>
        <if test="modifiedBy != null  and modifiedBy != ''">
        and modifiedBy=#{modifiedBy,jdbcType=VARCHAR}
        </if>>
        <if test="processId != null ">
            and processId=#{processId,jdbcType=INTEGER}
        </if>
    </select>
    <select id="selectExecutingJobsList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List" />
        from ExecutingJobs 
        where isDeleted='0'
        <if test="executingJobsId != null ">
        and executingJobsId=#{executingJobsId,jdbcType=INTEGER}
        </if>
        <if test="jobName != null  and jobName != ''">
        and jobName=#{jobName,jdbcType=VARCHAR}
        </if>
        <if test="executingType != null ">
        and executingType=#{executingType,jdbcType=INTEGER}
        </if>
        <if test="executingPeriod != null  and executingPeriod != ''">
        and executingPeriod=#{executingPeriod,jdbcType=VARCHAR}
        </if>
        <if test="jobScript != null  and jobScript != ''">
        and jobScript=#{jobScript,jdbcType=VARCHAR}
        </if>
        <if test="jobScriptDate != null ">
        and jobScriptDate=#{jobScriptDate,jdbcType=TIMESTAMP}
        </if>
        <if test="priority != null ">
        and priority=#{priority,jdbcType=INTEGER}
        </if>
        <if test="jobStatus != null ">
        and jobStatus=#{jobStatus,jdbcType=INTEGER}
        </if>
        <if test="retries != null ">
        and retries=#{retries,jdbcType=INTEGER}
        </if>
        <if test="retriesInterval != null ">
        and retriesInterval=#{retriesInterval,jdbcType=INTEGER}
        </if>
        <if test="attempt != null ">
            and attempt=#{attempt,jdbcType=INTEGER}
        </if>
        <if test="submitTime != null ">
        and submitTime=#{submitTime,jdbcType=TIMESTAMP}
        </if>
        <if test="startTime != null ">
        and startTime=#{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null ">
        and endTime=#{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="executorName != null  and executorName != ''">
        and executorName=#{executorName,jdbcType=VARCHAR}
        </if>
        <if test="executeTimes != null ">
        and executeTimes=#{executeTimes,jdbcType=INTEGER}
        </if>
        <if test="inputDate != null ">
        and inputDate=#{inputDate,jdbcType=TIMESTAMP}
        </if>
        <if test="inputBy != null  and inputBy != ''">
        and inputBy=#{inputBy,jdbcType=VARCHAR}
        </if>
        <if test="stampDate != null ">
        and stampDate=#{stampDate,jdbcType=TIMESTAMP}
        </if>
        <if test="modifiedBy != null  and modifiedBy != ''">
        and modifiedBy=#{modifiedBy,jdbcType=VARCHAR}
        </if>
        <if test="processId != null ">
            and processId=#{processId,jdbcType=INTEGER}
        </if>
        ORDER BY executingJobsId
        <if test="firstRow != null and  rowSize!= null">
        <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if>
    </select>
    <insert id="insertExecutingJobs" parameterType="org.my.myscheduler.dao.entity.ExecutingJobsEntity" useGeneratedKeys="true" keyProperty="executingJobsId">
        insert into ExecutingJobs (jobName,jobHisId,executingType,executingPeriod,jobScript,jobScriptDate,priority,jobStatus,retries,retriesInterval,attempt,submitTime,startTime,endTime,executorName,executeTimes,isDeleted,inputDate,inputBy,stampDate,modifiedBy,processId) values(#{jobName,jdbcType=VARCHAR},#{jobHisId,jdbcType=INTEGER},#{executingType,jdbcType=INTEGER},#{executingPeriod,jdbcType=VARCHAR},#{jobScript,jdbcType=VARCHAR},#{jobScriptDate,jdbcType=TIMESTAMP},#{priority,jdbcType=INTEGER},#{jobStatus,jdbcType=INTEGER},#{retries,jdbcType=INTEGER},#{retriesInterval,jdbcType=INTEGER},,#{attempt,jdbcType=INTEGER}#{submitTime,jdbcType=TIMESTAMP},#{startTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},#{executorName,jdbcType=VARCHAR},#{executeTimes,jdbcType=INTEGER},'0',now(),#{inputBy,jdbcType=VARCHAR},now(),#{modifiedBy,jdbcType=VARCHAR},#{processId,jdbcType=INTEGER})
    </insert>
    <update id="updateExecutingJobs" parameterType="org.my.myscheduler.dao.entity.ExecutingJobsEntity" >
        update ExecutingJobs
        <set>
            <if test="jobName != null" >
                jobName = #{jobName, jdbcType=VARCHAR},
            </if>
            <if test="jobHisId != null  and jobHisId > 0" >
                jobHisId = #{jobHisId, jdbcType=INTEGER},
            </if>
            <if test="executingType != null" >
                executingType = #{executingType, jdbcType=INTEGER},
            </if>
            <if test="executingPeriod != null" >
                executingPeriod = #{executingPeriod, jdbcType=VARCHAR},
            </if>
            <if test="jobScript != null" >
                jobScript = #{jobScript, jdbcType=VARCHAR},
            </if>
            <if test="jobScriptDate != null" >
                jobScriptDate = #{jobScriptDate, jdbcType=TIMESTAMP},
            </if>
            <if test="priority != null" >
                priority = #{priority, jdbcType=INTEGER},
            </if>
            <if test="jobStatus != null" >
                jobStatus = #{jobStatus, jdbcType=INTEGER},
            </if>
            <if test="retries != null" >
                retries = #{retries, jdbcType=INTEGER},
            </if>
            <if test="retriesInterval != null" >
                retriesInterval = #{retriesInterval, jdbcType=INTEGER},
            </if>
            <if test="attempt != null" >
                attempt = #{attempt, jdbcType=INTEGER},
            </if>
            <if test="submitTime != null" >
                submitTime = #{submitTime, jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null" >
                startTime = #{startTime, jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                endTime = #{endTime, jdbcType=TIMESTAMP},
            </if>
            <if test="executorName != null" >
                executorName = #{executorName, jdbcType=VARCHAR},
            </if>
            <if test="executeTimes != null" >
                executeTimes = #{executeTimes, jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                isDeleted = #{isDeleted, jdbcType=CHAR},
            </if>
            <if test="modifiedBy != null" >
                modifiedBy = #{modifiedBy, jdbcType=VARCHAR},
            </if>
            <if test="processId != null" >
                processId = #{processId, jdbcType=INTEGER},
            </if>
            stampDate = now()
        </set>
        where executingJobsId = #{executingJobsId,jdbcType=INTEGER}
    </update>
    <update id="deleteExecutingJobsById" parameterType="java.lang.Long" >
        update ExecutingJobs
        <set>
            isDeleted = '1'
        </set>
        where executingJobsId = #{executingJobsId,jdbcType=INTEGER}
    </update>
    <update id="setJobsRunning" parameterType="java.util.Map">
        update ExecutingJobs
        <set>
            jobStatus = 1,
            attempt = attempt + 1,
            submitTime = IFNULL(submitTime, now()),
            startTime = now(),
            endTime = null,
            <if test="executorName != null" >
                executorName = #{executorName, jdbcType=VARCHAR},
            </if>
            <if test="processId != null" >
                processId = #{processId, jdbcType=INTEGER},
            </if>
            stampDate = now()
        </set>
        where executingJobsId = #{executingJobsId,jdbcType=INTEGER}
                and jobStatus = #{jobOldStatus, jdbcType=INTEGER}
                and attempt = #{attempt, jdbcType=INTEGER};
        select row_count();
    </update>
    <insert id="initExecutingJobs">
        INSERT INTO ExecutingJobs(jobName
            ,jobHisId
            ,executingType
            ,executingPeriod
            ,jobScript
            ,jobScriptDate
            ,priority
            ,jobStatus
            ,retries
            ,retriesInterval
            ,attempt
            ,submitTime
            ,startTime
            ,endTime
            ,executorName
            ,executeTimes
            ,isDeleted
            ,inputDate
            ,inputBy
            ,stampDate
            ,modifiedBy
            ,processId)
            select j.jobName,
              null as jobHisId,
              0 as executingType,
              p.nextPeriod as executingPeriod,
              s.shellContent as jobScript,
              s.stampDate as jobScriptDate,
              ifnull(j.priority, 99) as priority,
              0 as jobStatus,
              j.retries,
              j.retriesInterval,
              0 as attempt,
              null as submitTime,
              null as startTime,
              null as endTime,
              null as executorName,
              0 as executeTimes,
              '0' as isDeleted,
              now() as inputDate,
              'admin' as inputBy,
              now() as stampDate,
              'admin' as modifiedBy,
              null as processId
            FROM Jobs j INNER JOIN v_ExecutingPeriod p
             ON j.period = p.jobPeriod
             INNER JOIN JobsShellDDP s
             ON j.jobId = s.jobId
             LEFT OUTER JOIN ExecutingJobs ej
             ON ej.jobName = j.jobName AND p.nextPeriod = ej.executingPeriod and ej.executingType = 0 AND ej.isDeleted = '0'
            WHERE j.jobStatusDDP = '1'
            and j.isDeleted = '0'
            and s.isDeleted = '0'
            and case when j.period = 'W' then DAYOFWEEK(j.startDate) = DAYOFWEEK(DATE_ADD(now(),INTERVAL 1 DAY))
               when j.period = 'M' then DAYOFMONTH(j.startDate) = DAYOFMONTH(DATE_ADD(now(),INTERVAL 1 DAY)) else 1=1 end
            AND ej.executingJobsId IS NULL
    </insert>
    <select id="getExecutableJobList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT * FROM (select ej.executingJobsId,ej.jobName,ej.executingType,ej.executingPeriod,ej.jobScript,ej.jobScriptDate,
        ej.priority,ej.jobStatus,ej.retries,ej.retriesInterval,ej.attempt,ej.submitTime,ej.startTime,ej.endTime,
        ej.executorName,ej.executeTimes,ej.isDeleted,ej.inputDate,ej.inputBy,ej.stampDate,ej.modifiedBy,ej.processId
        ,ej.jobHisId
        FROM ExecutingJobs ej
        WHERE ej.isDeleted = '0'
        AND (ej.jobStatus = 0
        )
        AND ej.executingJobsId NOT IN (
        SELECT ec.executingJobsId
        FROM ExecutingConstraints ec
        WHERE ec.isDeleted = '0' AND ec.depTime IS NOT NULL AND NOW()   &lt; ec.depTime
        UNION ALL
        SELECT ec.executingJobsId
        FROM ExecutingConstraints ec INNER JOIN ExecutingJobs exej
        ON ec.depJob = exej.jobName AND ec.depJobPeriod = exej.executingPeriod
        WHERE ec.isDeleted = '0' AND exej.isDeleted = '0' AND exej.jobStatus != 3
        AND exej.executingType = ej.executingType
        ) ORDER BY 7 ASC, 4 ASC, 1 ASC
        <if test="firstRow != null and  rowSize!= null">
            <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if> ) t1
        UNION
        SELECT * FROM (
        select ej.executingJobsId,ej.jobName,ej.executingType,ej.executingPeriod,ej.jobScript,ej.jobScriptDate,
        ej.priority,ej.jobStatus,ej.retries,ej.retriesInterval,ej.attempt,ej.submitTime,ej.startTime,ej.endTime,
        ej.executorName,ej.executeTimes,ej.isDeleted,ej.inputDate,ej.inputBy,ej.stampDate,ej.modifiedBy,ej.processId
        ,ej.jobHisId
        FROM ExecutingJobs ej
        WHERE ej.isDeleted = '0'
        AND ( ej.jobStatus = 2 AND ej.endTime &lt;= DATE_ADD(NOW(),INTERVAL ej.retriesInterval * -1 SECOND))
        AND ej.executingJobsId NOT IN (
        SELECT ec.executingJobsId
        FROM ExecutingConstraints ec
        WHERE ec.isDeleted = '0' AND ec.depTime IS NOT NULL AND NOW()   &lt; ec.depTime
        UNION ALL
        SELECT ec.executingJobsId
        FROM ExecutingConstraints ec INNER JOIN ExecutingJobs exej
        ON ec.depJob = exej.jobName AND ec.depJobPeriod = exej.executingPeriod
        WHERE ec.isDeleted = '0' AND exej.isDeleted = '0' AND exej.jobStatus != 3
        AND exej.executingType = ej.executingType
        ) ORDER BY 7 ASC, 4 ASC, 1 ASC
        <if test="firstRow != null and  rowSize!= null">
            <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if>		) t2
        UNION
        SELECT * FROM (
        select ej.executingJobsId,ej.jobName,ej.executingType,ej.executingPeriod,ej.jobScript,ej.jobScriptDate,
        ej.priority,ej.jobStatus,ej.retries,ej.retriesInterval,ej.attempt,ej.submitTime,ej.startTime,ej.endTime,
        ej.executorName,ej.executeTimes,ej.isDeleted,ej.inputDate,ej.inputBy,ej.stampDate,ej.modifiedBy,ej.processId
        ,ej.jobHisId
        FROM ExecutingJobs ej LEFT OUTER JOIN ExecutorHeartbeat eh
        ON ej.executorName = eh.executorName
        where ej.jobStatus = 1 AND NOW() >= DATE_ADD(IFNULL(eh.heartBeatTime, '2000-01-01'),INTERVAL
        30
        MINUTE) AND ej.executingJobsId NOT IN (
        SELECT ec.executingJobsId
        FROM ExecutingConstraints ec
        WHERE ec.isDeleted = '0' AND ec.depTime IS NOT NULL AND NOW()   &lt; ec.depTime
        UNION ALL
        SELECT ec.executingJobsId
        FROM ExecutingConstraints ec INNER JOIN ExecutingJobs exej
        ON ec.depJob = exej.jobName AND ec.depJobPeriod = exej.executingPeriod
        WHERE ec.isDeleted = '0' AND exej.isDeleted = '0' AND exej.jobStatus != 3
        AND exej.executingType = ej.executingType
        ) ORDER BY 7 ASC, 4 ASC, 1 ASC
        <if test="firstRow != null and  rowSize!= null">
            <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if>		) t3
        ORDER BY 7 ASC, 4 ASC, 1 ASC
        <if test="firstRow != null and  rowSize!= null">
            <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if>
    </select>
    <insert id="initExecutingJobsManual" parameterType="java.util.Map">
        INSERT INTO ExecutingJobs(jobName
            ,executingType
            ,executingPeriod
            ,jobScript
            ,jobScriptDate
            ,priority
            ,jobStatus
            ,retries
            ,retriesInterval
            ,attempt
            ,submitTime
            ,startTime
            ,endTime
            ,executorName
            ,executeTimes
            ,isDeleted
            ,inputDate
            ,inputBy
            ,stampDate
            ,modifiedBy
            ,processId)
            select j.jobName,
              1 as executingType,
			  CASE WHEN j.period = 'T' THEN DATE_ADD(DATE_FORMAT(#{periodDate, jdbcType=VARCHAR},'%Y-%m-%d %H:00:00'), INTERVAL FLOOR(MINUTE(#{periodDate, jdbcType=VARCHAR}) / 10) * 10 MINUTE)
				WHEN j.period = 'H' THEN DATE_FORMAT(#{periodDate, jdbcType=VARCHAR},'%Y-%m-%d %H:00:00')
				ELSE DATE_FORMAT(#{periodDate, jdbcType=VARCHAR},'%Y-%m-%d 00:00:00') END as executingPeriod,
              s.shellContent as jobScript,
              s.stampDate as jobScriptDate,
              0 as priority,
              0 as jobStatus,
              j.retries,
              j.retriesInterval,
              0 as attempt,
              null as submitTime,
              null as startTime,
              null as endTime,
              null as executorName,
              0 as executeTimes,
              '0' as isDeleted,
              now() as inputDate,
              'admin' as inputBy,
              now() as stampDate,
              'admin' as modifiedBy,
              null as processId
            FROM Jobs j
             INNER JOIN JobsShellDDP s
             ON j.jobId = s.jobId
            WHERE j.jobName = #{jobName, jdbcType=VARCHAR}
            and j.isDeleted = '0'
            and s.isDeleted = '0'
    </insert>
    <select id="getExecutingJobsManual" resultType="org.my.myscheduler.dao.entity.ExecutingJobsEntity" parameterType="java.util.Map">
        select j.jobName,
        1 as executingType,
        j.period as jobPeriod,
        s.shellContent as jobScript,
        s.stampDate as jobScriptDate,
        0 as priority,
        0 as jobStatus,
        j.retries,
        j.retriesInterval,
        0 as attempt,
        null as submitTime,
        null as startTime,
        null as endTime,
        null as executorName,
        0 as executeTimes,
        '0' as isDeleted,
        now() as inputDate,
        'admin' as inputBy,
        now() as stampDate,
        'admin' as modifiedBy,
        null as processId
        FROM Jobs j
        INNER JOIN JobsShellDDP s
        ON j.jobId = s.jobId
        WHERE j.jobName = #{jobName, jdbcType=VARCHAR}
        and j.isDeleted = '0'
        and s.isDeleted = '0'
    </select>
    <update id="reInitExecutingJobs" parameterType="java.util.Map">
        update ExecutingJobs
        <set>
            jobStatus = 0,
            attempt = 0,
            executeTimes = executeTimes + 1,
            processId = null,
            <if test="modifiedBy != null" >
              modifiedBy = #{modifiedBy, jdbcType=VARCHAR},
            </if>
            stampDate = now()
        </set>
        where 1=1
        <if test="executingJobsIds != null and executingJobsIds.size() > 0">
           AND executingJobsId in
            <foreach collection="executingJobsIds" item="id" index="index"
                     open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="executorName != null">
            AND executorName = #{executorName, jdbcType=VARCHAR}
        </if>
        <if test="jobStatus != null">
            AND jobStatus = #{jobStatus, jdbcType=INTEGER}
        </if>
    </update>
    <update id="refreshExecutingJobs" parameterType="java.util.Map">
        update ExecutingJobs ej, Jobs j, JobsShellDDP s
        <set>
           ej.jobScript = s.shellContent,
           ej.jobScriptDate = s.stampDate,
           ej.priority = j.priority,
           ej.retries = j.retries,
           ej.retriesInterval = j.retriesInterval,
           ej.modifiedBy = #{modifiedBy, jdbcType=VARCHAR},
           ej.stampDate = now()
        </set>
        where ej.jobName = j.jobName
        and j.jobId = s.jobId
        and j.isDeleted = '0'
        and s.isDeleted = '0'
        and ej.isDeleted = '0'
        and ej.executingJobsId = #{executingJobsId, jdbcType=INTEGER}
    </update>
    <select id="getUpStreamExecutingJobs" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT ej.* from ExecutingJobs ej
            INNER JOIN ExecutingConstraints ec ON ej.jobName = ec.depJob AND ej.executingPeriod = ec.depJobPeriod
            WHERE ej.isDeleted = '0' AND ec.isDeleted = '0'
            AND ec.executingJobsId = #{executingJobsId, jdbcType=INTEGER}
    </select>
    <select id="getDownStreamExecutingJobs" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT depEj.* from ExecutingJobs ej
            INNER JOIN ExecutingConstraints ec ON ej.jobName = ec.depJob AND ej.executingPeriod = ec.depJobPeriod
            INNER JOIN ExecutingJobs depEj ON depEj.executingJobsId = ec.executingJobsId
            WHERE ej.isDeleted = '0' AND ec.isDeleted = '0' AND depEj.isDeleted = '0'
            AND ej.executingJobsId = #{executingJobsId, jdbcType=INTEGER}
    </select>
    <select id="getProjectConfig" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT configKey, configValue FROM Jobs j
            INNER JOIN MyProjectConfig pc ON j.projectId = pc.projectId
            WHERE pc.isDeleted = '0' AND j.isDeleted = '0'
            AND j.jobName = #{jobName, jdbcType=VARCHAR}
    </select>
    <select id="getProjectByJobName" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT p.* FROM Jobs j
        INNER JOIN MyProject p ON j.projectId = p.projectId
        WHERE j.isDeleted = '0'
        AND j.jobName = #{jobName, jdbcType=VARCHAR}
        LIMIT 1
    </select>
    <select id="getMaxJobHisId" resultType="java.lang.Long" parameterType="java.util.Map">
        SELECT MAX(jobHisId) as jobHisId FROM JobsHistory WHERE jobName = #{jobName, jdbcType=VARCHAR} AND isDeleted = '0'
    </select>
    <select id="getJobsWithoutJobHisId" resultType="org.my.myscheduler.dao.entity.ExecutingJobsEntity" parameterType="java.util.Map">
        SELECT executingJobsId, jobName FROM ExecutingJobs
         WHERE jobHisId IS NULL
         AND isDeleted = '0'
        <if test="executingJobsId != null ">
            and executingJobsId=#{executingJobsId,jdbcType=INTEGER}
        </if>
        <if test="jobName != null  and jobName != ''">
            and jobName=#{jobName,jdbcType=VARCHAR}
        </if>
        <if test="executingType != null ">
            and executingType=#{executingType,jdbcType=INTEGER}
        </if>
        <if test="executingPeriod != null  and executingPeriod != ''">
            and executingPeriod=#{executingPeriod,jdbcType=VARCHAR}
        </if>
        <if test="jobScript != null  and jobScript != ''">
            and jobScript=#{jobScript,jdbcType=VARCHAR}
        </if>
        <if test="jobScriptDate != null ">
            and jobScriptDate=#{jobScriptDate,jdbcType=TIMESTAMP}
        </if>
        <if test="priority != null ">
            and priority=#{priority,jdbcType=INTEGER}
        </if>
        <if test="jobStatus != null ">
            and jobStatus=#{jobStatus,jdbcType=INTEGER}
        </if>
        <if test="retries != null ">
            and retries=#{retries,jdbcType=INTEGER}
        </if>
        <if test="retriesInterval != null ">
            and retriesInterval=#{retriesInterval,jdbcType=INTEGER}
        </if>
        <if test="attempt != null ">
            and attempt=#{attempt,jdbcType=INTEGER}
        </if>
        <if test="submitTime != null ">
            and submitTime=#{submitTime,jdbcType=TIMESTAMP}
        </if>
        <if test="startTime != null ">
            and startTime=#{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null ">
            and endTime=#{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="executorName != null  and executorName != ''">
            and executorName=#{executorName,jdbcType=VARCHAR}
        </if>
        <if test="executeTimes != null ">
            and executeTimes=#{executeTimes,jdbcType=INTEGER}
        </if>
        <if test="inputDate != null ">
            and inputDate=#{inputDate,jdbcType=TIMESTAMP}
        </if>
        <if test="inputBy != null  and inputBy != ''">
            and inputBy=#{inputBy,jdbcType=VARCHAR}
        </if>
        <if test="stampDate != null ">
            and stampDate=#{stampDate,jdbcType=TIMESTAMP}
        </if>
        <if test="modifiedBy != null  and modifiedBy != ''">
            and modifiedBy=#{modifiedBy,jdbcType=VARCHAR}
        </if>
        <if test="processId != null ">
            and processId=#{processId,jdbcType=INTEGER}
        </if>
        ORDER BY executingJobsId
        <if test="firstRow != null and  rowSize!= null">
            <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if>
    </select>
    <update id="updateJobHisIds">
        update ExecutingJobs ej, (
        select max(jh.jobHisId) as jobHisId, jh.jobName from JobsHistory jh
        group by jh.jobName) t
        set ej.jobHisId = t.jobHisId
        where ej.jobName = t.jobName
        and ej.jobHisId is NULL
    </update>
</mapper>