<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.my.myscheduler.dao.mapper.bigDataPlatform.ExecutingJobsHisMapper">
    <resultMap id="BaseResultMap" type="org.my.myscheduler.dao.entity.ExecutingJobsHisEntity">
        <id column="executingJobsHisId" property="executingJobsHisId" jdbcType="INTEGER" />
        <result column="executingJobsId" property="executingJobsId" jdbcType="INTEGER" />
        <result column="jobName" property="jobName" jdbcType="VARCHAR" />
        <result column="jobHisId" property="jobHisId" jdbcType="INTEGER" />
        <result column="executingType" property="executingType" jdbcType="INTEGER" />
        <result column="executingPeriod" property="executingPeriod" jdbcType="VARCHAR" />
        <result column="jobScript" property="jobScript" jdbcType="VARCHAR" />
        <result column="jobScriptDate" property="jobScriptDate" jdbcType="TIMESTAMP" />
        <result column="priority" property="priority" jdbcType="INTEGER" />
        <result column="jobStatus" property="jobStatus" jdbcType="INTEGER" />
        <result column="retries" property="retries" jdbcType="INTEGER" />
        <result column="retriesInterval" property="retriesInterval" jdbcType="INTEGER" />
        <result column="attempt" property="attempt" jdbcType="INTEGER" />
        <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP" />
        <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
        <result column="executeTimes" property="executeTimes" jdbcType="INTEGER" />
        <result column="isDeleted" property="isDeleted" jdbcType="CHAR" />
        <result column="inputDate" property="inputDate" jdbcType="TIMESTAMP" />
        <result column="inputBy" property="inputBy" jdbcType="VARCHAR" />
        <result column="stampDate" property="stampDate" jdbcType="TIMESTAMP" />
        <result column="modifiedBy" property="modifiedBy" jdbcType="VARCHAR" />
        <result column="processId" property="processId" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List">
        executingJobsHisId,executingJobsId,jobName,jobHisId,executingType,executingPeriod,jobScript,jobScriptDate,priority,jobStatus,retries,retriesInterval,attempt,submitTime,startTime,endTime,executeTimes,isDeleted,inputDate,inputBy,stampDate,modifiedBy,processId
    </sql>
    <select id="selectExecutingJobsHisById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from ExecutingJobsHis 
        where executingJobsHisId = #{executingJobsHisId,jdbcType=INTEGER} and isDeleted = '0'
    </select>
    <select id="selectExecutingJobsHisCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(1)
        from ExecutingJobsHis 
        where isDeleted='0'
        <if test="executingJobsHisId != null ">
        and executingJobsHisId=#{executingJobsHisId,jdbcType=INTEGER}
        </if>
        <if test="executingJobsId != null ">
        and executingJobsId=#{executingJobsId,jdbcType=INTEGER}
        </if>
        <if test="jobName != null  and jobName != ''">
        and jobName=#{jobName,jdbcType=VARCHAR}
        </if>
        <if test="executingType != null ">
        and executingType=#{executingType,jdbcType=INTEGER}
        </if>
        <if test="executingPeriod != null  and executingPeriod != ''">
        and executingPeriod=#{executingPeriod,jdbcType=VARCHAR}
        </if>
        <if test="jobScript != null  and jobScript != ''">
        and jobScript=#{jobScript,jdbcType=VARCHAR}
        </if>
        <if test="jobScriptDate != null ">
        and jobScriptDate=#{jobScriptDate,jdbcType=TIMESTAMP}
        </if>
        <if test="priority != null ">
        and priority=#{priority,jdbcType=INTEGER}
        </if>
        <if test="jobStatus != null ">
        and jobStatus=#{jobStatus,jdbcType=INTEGER}
        </if>
        <if test="retries != null ">
        and retries=#{retries,jdbcType=INTEGER}
        </if>
        <if test="retriesInterval != null ">
        and retriesInterval=#{retriesInterval,jdbcType=INTEGER}
        </if>
        <if test="attempt != null ">
            and attempt=#{attempt,jdbcType=INTEGER}
        </if>
        <if test="submitTime != null ">
        and submitTime=#{submitTime,jdbcType=TIMESTAMP}
        </if>
        <if test="startTime != null ">
        and startTime=#{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null ">
        and endTime=#{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="executeTimes != null ">
        and executeTimes=#{executeTimes,jdbcType=INTEGER}
        </if>
        <if test="inputDate != null ">
        and inputDate=#{inputDate,jdbcType=TIMESTAMP}
        </if>
        <if test="inputBy != null  and inputBy != ''">
        and inputBy=#{inputBy,jdbcType=VARCHAR}
        </if>
        <if test="stampDate != null ">
        and stampDate=#{stampDate,jdbcType=TIMESTAMP}
        </if>
        <if test="modifiedBy != null  and modifiedBy != ''">
        and modifiedBy=#{modifiedBy,jdbcType=VARCHAR}
        </if>
        <if test="processId != null ">
            and processId=#{processId,jdbcType=INTEGER}
        </if>
    </select>
    <select id="selectExecutingJobsHisList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List" />
        from ExecutingJobsHis 
        where isDeleted='0'
        <if test="executingJobsHisId != null ">
        and executingJobsHisId=#{executingJobsHisId,jdbcType=INTEGER}
        </if>
        <if test="executingJobsId != null ">
        and executingJobsId=#{executingJobsId,jdbcType=INTEGER}
        </if>
        <if test="jobName != null  and jobName != ''">
        and jobName=#{jobName,jdbcType=VARCHAR}
        </if>
        <if test="executingType != null ">
        and executingType=#{executingType,jdbcType=INTEGER}
        </if>
        <if test="executingPeriod != null  and executingPeriod != ''">
        and executingPeriod=#{executingPeriod,jdbcType=VARCHAR}
        </if>
        <if test="jobScript != null  and jobScript != ''">
        and jobScript=#{jobScript,jdbcType=VARCHAR}
        </if>
        <if test="jobScriptDate != null ">
        and jobScriptDate=#{jobScriptDate,jdbcType=TIMESTAMP}
        </if>
        <if test="priority != null ">
        and priority=#{priority,jdbcType=INTEGER}
        </if>
        <if test="jobStatus != null ">
        and jobStatus=#{jobStatus,jdbcType=INTEGER}
        </if>
        <if test="retries != null ">
        and retries=#{retries,jdbcType=INTEGER}
        </if>
        <if test="retriesInterval != null ">
        and retriesInterval=#{retriesInterval,jdbcType=INTEGER}
        </if>
        <if test="attempt != null ">
            and attempt=#{attempt,jdbcType=INTEGER}
        </if>
        <if test="submitTime != null ">
        and submitTime=#{submitTime,jdbcType=TIMESTAMP}
        </if>
        <if test="startTime != null ">
        and startTime=#{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null ">
        and endTime=#{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="executeTimes != null ">
        and executeTimes=#{executeTimes,jdbcType=INTEGER}
        </if>
        <if test="inputDate != null ">
        and inputDate=#{inputDate,jdbcType=TIMESTAMP}
        </if>
        <if test="inputBy != null  and inputBy != ''">
        and inputBy=#{inputBy,jdbcType=VARCHAR}
        </if>
        <if test="stampDate != null ">
        and stampDate=#{stampDate,jdbcType=TIMESTAMP}
        </if>
        <if test="modifiedBy != null  and modifiedBy != ''">
        and modifiedBy=#{modifiedBy,jdbcType=VARCHAR}
        </if>
        <if test="processId != null ">
            and processId=#{processId,jdbcType=INTEGER}
        </if>
        ORDER BY executingJobsHisId
        <if test="firstRow != null and  rowSize!= null">
        <![CDATA[limit #{firstRow},#{rowSize} ]]><!-- 分页处理 -->
        </if>
    </select>
    <insert id="insertExecutingJobsHis" parameterType="org.my.myscheduler.dao.entity.ExecutingJobsHisEntity" useGeneratedKeys="true" keyProperty="executingJobsHisId">
        insert into ExecutingJobsHis (executingJobsId,jobName,jobHisId,executingType,executingPeriod,jobScript,jobScriptDate,priority,jobStatus,retries,retriesInterval,attempt,submitTime,startTime,endTime,executeTimes,isDeleted,inputDate,inputBy,stampDate,modifiedBy,processId) values(#{executingJobsId,jdbcType=INTEGER},#{jobName,jdbcType=VARCHAR},#{jobHisId,jdbcType=INTEGER},#{executingType,jdbcType=INTEGER},#{executingPeriod,jdbcType=VARCHAR},#{jobScript,jdbcType=VARCHAR},#{jobScriptDate,jdbcType=TIMESTAMP},#{priority,jdbcType=INTEGER},#{jobStatus,jdbcType=INTEGER},#{retries,jdbcType=INTEGER},#{retriesInterval,jdbcType=INTEGER},#{attempt,jdbcType=INTEGER},#{submitTime,jdbcType=TIMESTAMP},#{startTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},#{executeTimes,jdbcType=INTEGER},'0',now(),#{inputBy,jdbcType=VARCHAR},now(),#{modifiedBy,jdbcType=VARCHAR},#{processId,jdbcType=INTEGER})
    </insert>
    <update id="updateExecutingJobsHis" parameterType="org.my.myscheduler.dao.entity.ExecutingJobsHisEntity" >
        update ExecutingJobsHis
        <set>
            <if test="executingJobsId != null" >
                executingJobsId = #{executingJobsId, jdbcType=INTEGER},
            </if>
            <if test="jobName != null" >
                jobName = #{jobName, jdbcType=VARCHAR},
            </if>
            <if test="jobHisId != null" >
                jobHisId = #{jobHisId, jdbcType=INTEGER},
            </if>
            <if test="executingType != null" >
                executingType = #{executingType, jdbcType=INTEGER},
            </if>
            <if test="executingPeriod != null" >
                executingPeriod = #{executingPeriod, jdbcType=VARCHAR},
            </if>
            <if test="jobScript != null" >
                jobScript = #{jobScript, jdbcType=VARCHAR},
            </if>
            <if test="jobScriptDate != null" >
                jobScriptDate = #{jobScriptDate, jdbcType=TIMESTAMP},
            </if>
            <if test="priority != null" >
                priority = #{priority, jdbcType=INTEGER},
            </if>
            <if test="jobStatus != null" >
                jobStatus = #{jobStatus, jdbcType=INTEGER},
            </if>
            <if test="retries != null" >
                retries = #{retries, jdbcType=INTEGER},
            </if>
            <if test="retriesInterval != null" >
                retriesInterval = #{retriesInterval, jdbcType=INTEGER},
            </if>
            <if test="attempt != null" >
                attempt = #{attempt, jdbcType=INTEGER},
            </if>
            <if test="submitTime != null" >
                submitTime = #{submitTime, jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null" >
                startTime = #{startTime, jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                endTime = #{endTime, jdbcType=TIMESTAMP},
            </if>
            <if test="executeTimes != null" >
                executeTimes = #{executeTimes, jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                isDeleted = #{isDeleted, jdbcType=CHAR},
            </if>
            <if test="modifiedBy != null" >
                modifiedBy = #{modifiedBy, jdbcType=VARCHAR},
            </if>
            <if test="processId != null" >
                processId = #{processId, jdbcType=INTEGER},
            </if>
            stampDate = now()
        </set>
        where executingJobsHisId = #{executingJobsHisId,jdbcType=INTEGER}
    </update>
    <update id="deleteExecutingJobsHisById" parameterType="java.lang.Long" >
        update ExecutingJobsHis
        <set>
            isDeleted = '1'
        </set>
        where executingJobsHisId = #{executingJobsHisId,jdbcType=INTEGER}
    </update>
    <insert id="insertByExecutingJobsId" parameterType="org.my.myscheduler.dao.entity.ExecutingJobsHisEntity" useGeneratedKeys="true" keyProperty="executingJobsHisId">
        insert into ExecutingJobsHis (executingJobsId,jobName,jobHisId,executingType,executingPeriod,jobScript,jobScriptDate,priority,jobStatus,retries,retriesInterval,attempt,submitTime,startTime,endTime,executeTimes,isDeleted,inputDate,inputBy,stampDate,modifiedBy,processId)
        select executingJobsId,jobName,jobHisId,executingType,executingPeriod,jobScript,jobScriptDate,priority,jobStatus,retries,retriesInterval,attempt,submitTime,startTime,endTime,executeTimes,isDeleted,inputDate,inputBy,stampDate,modifiedBy,processId
        from ExecutingJobs WHERE executingJobsId = #{executingJobsId,jdbcType=INTEGER}
    </insert>
</mapper>